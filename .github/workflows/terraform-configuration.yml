name: Terraform CI/CD

on:
  # Trigger on push to main branch or other specific branches
  push:
    branches:
      - main  # or any branch you want to trigger the pipeline on
  # Allow manual trigger of the workflow
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (e.g., dev, prod)'
        required: true
        default: 'dev'
      action:
        description: 'Choose action (apply or destroy)'
        required: true
        default: 'apply'
        options:
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      # Step 3: Run Terraform Init
      - name: Terraform Init
        run: terraform init

      # Step 4: Run Terraform Plan
      - name: Terraform Plan
        run: terraform plan -var="environment=${{ github.event.inputs.environment }}"

      # Step 5: Run Terraform Apply or Destroy based on input or push
      - name: Terraform Apply
        if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve -var="environment=${{ github.event.inputs.environment }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Step 6: Run Terraform Destroy (only when the input action is 'destroy' or manually triggered)
      - name: Terraform Destroy
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy')
        run: terraform destroy -auto-approve -var="environment=${{ github.event.inputs.environment }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
